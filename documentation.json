{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-e59eb4ba3afbe54227d31989c3798349",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'pinterest-clone'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'pinterest-clone';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<router-outlet></router-outlet>\n<!-- <app-btn-circle-icon>\n\n</app-btn-circle-icon> -->"
        },
        {
            "name": "BtnCircleIconComponent",
            "id": "component-BtnCircleIconComponent-a7973005f8b1f6bace88df2aec2ad177",
            "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-btn-circle-icon",
            "styleUrls": [
                "./btn-circle-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./btn-circle-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 759,
                            "end": 773,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 760,
                                "end": 768,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 17,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 11,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\" | \"huge\"",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "toggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy, Component\n} from '@angular/core';\nimport { ButtonBase } from '../btn-base';\n\n@Component({\n  selector: 'app-btn-circle-icon',\n  templateUrl: './btn-circle-icon.component.html',\n  styleUrls: ['./btn-circle-icon.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BtnCircleIconComponent extends ButtonBase {\n  public get classes(): string[] {\n    const size = `btn-circle-icon--${this.size}`;\n    const mode = `btn-circle-icon--${this.mode}`;\n    const toggle = this.toggle ? `btn-circle-icon--toggle` : '';\n    return ['btn-circle-icon', size, mode, toggle];\n  }\n\n  constructor() {\n    super();\n    this.mode = '';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-circle-icon {\r\n  border-radius: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: none;\r\n}\r\n\r\n.btn-circle-icon--medium {\r\n  height: 32px;\r\n  max-width: 32px;\r\n}\r\n\r\n.btn-circle-icon--large {\r\n  height: 48px;\r\n  width: 48px;\r\n  max-width: 48px;\r\n}\r\n\r\n.btn-circle-icon--pin {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  color: var(--g-colorGray300);\r\n\r\n  ::ng-deep .mat-button-wrapper {\r\n    padding: 0px;\r\n    .material-icons-outlined {\r\n      font-size: 22px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n}\r\n\r\n.btn-circle-icon--pin:hover {\r\n  background-color: rgba(255, 255, 255, 1);\r\n}\r\n\r\n.btn-circle-icon--pin:active {\r\n  box-shadow: none !important;\r\n  transform: scale(0.93, 0.93);\r\n}\r\n\r\n.btn-circle-icon--pin.btn-circle-icon--large {\r\n  background-color: transparent;\r\n  .mat-icon {\r\n    height: 28px;\r\n    width: 28px;\r\n  }\r\n  .material-icons {\r\n    font-size: 28px;\r\n    font-weight: 500;\r\n  }\r\n}\r\n\r\n.btn-circle-icon--pin.btn-circle-icon--large:hover {\r\n  background-color: var(--g-colorGray100);\r\n}\r\n.btn-circle-icon--pin.btn-circle-icon--large:focus {\r\n  box-shadow: var(--border-blue-active);\r\n}\r\n.btn-circle-icon--pin.btn-circle-icon--large:active {\r\n  transform: unset !important;\r\n  background-color: var(--g-colorGray150);\r\n  box-shadow: var(--border-blue-active);\r\n}\r\n\r\n.btn-circle-icon--header {\r\n  background-color: transparent;\r\n  color: var(--g-colorGray200);\r\n\r\n  ::ng-deep .mat-button-wrapper {\r\n    padding: 0px;\r\n    .mat-icon {\r\n      height: 28px;\r\n      width: 28px;\r\n    }\r\n    .material-icons {\r\n      font-size: 28px;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n}\r\n\r\n.btn-circle-icon--header:hover,\r\n.btn-circle-icon--header:focus {\r\n  background-color: rgba(0, 0, 0, 0.06);\r\n}\r\n.btn-circle-icon--header:focus {\r\n  box-shadow: var(--border-blue-active);\r\n}\r\n\r\n.btn-circle-icon--header:active {\r\n  box-shadow: none !important;\r\n  // transform: scale(0.93, 0.93);\r\n}\r\n\r\n.btn-circle-icon--pin-detail {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  color: var(--g-colorGray300);\r\n\r\n  ::ng-deep .mat-button-wrapper {\r\n    padding: 0px;\r\n    .mat-icon {\r\n      height: 20px;\r\n      width: 20px;\r\n    }\r\n    .material-icons {\r\n      font-size: 20px;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n}\r\n.btn-circle-icon--pin-detail:active {\r\n  background-color: var(--g-colorGray100) !important;\r\n  box-shadow: none !important;\r\n  transform: unset !important;\r\n  .mat-icon {\r\n    transform: scale(0.95, 0.95);\r\n  }\r\n}\r\n\r\n.btn-circle-icon--toggle {\r\n  color: var(--g-colorGray300);\r\n}\r\n",
                    "styleUrl": "./btn-circle-icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "extends": "ButtonBase",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 13
                    }
                }
            },
            "templateData": "<button mat-mini-fab [ngClass]=\"classes\">\n  <mat-icon\n    [ngClass]=\"!primary ? 'material-icons-outlined' : 'material-icons'\"\n    >{{ label }}</mat-icon\n  >\n</button>\n"
        },
        {
            "name": "BtnCommonComponent",
            "id": "component-BtnCommonComponent-cf46579a49ca28585555432a7cc1d159",
            "file": "src/app/shared/atoms/btn-common/btn-common.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-btn-common",
            "styleUrls": [
                "./btn-common.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./btn-common.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 759,
                            "end": 773,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 760,
                                "end": 768,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 17,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 11,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\" | \"huge\"",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "toggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component\n} from '@angular/core';\nimport { ButtonBase } from '../btn-base';\n\n@Component({\n  selector: 'app-btn-common',\n  templateUrl: './btn-common.component.html',\n  styleUrls: ['./btn-common.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BtnCommonComponent extends ButtonBase {\n  public get classes(): string[] {\n    return [\n      'btn-common',\n      `btn-common--${this.size}`,\n      `btn-common--${this.mode}`,\n    ];\n  }\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-common {\r\n  font-family: \"Nunito Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n  color: var(--g-colorGray0);\r\n}\r\n\r\n.btn-common--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.btn-common--medium {\r\n  min-height: 40px;\r\n  padding: 10px 14px;\r\n  font-size: var(--g-text-font-size-1);\r\n}\r\n.btn-common--large {\r\n  font-size: var(--g-text-font-size-3);\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  padding-bottom: 12px;\r\n  padding-top: 12px;\r\n  min-height: 48px;\r\n  min-width: 60px;\r\n}\r\n\r\n.btn-common--save:hover {\r\n  background-color: #ad081b !important;\r\n  background-color: var(--g-colorRed100Hovered) !important;\r\n}\r\n\r\n.btn-common--save:active {\r\n  transform: scale(0.93,0.93);\r\n}\r\n\r\n.btn-common--home-detail{\r\n    color: var(--g-colorGray300);\r\n}\r\n\r\n.btn-common--home-detail:hover {\r\n    background-color: var(--g-colorGray100) !important;\r\n}\r\n.btn-common--home-detail:active {\r\n    background-color: var(--g-colorGray150) !important;\r\n}",
                    "styleUrl": "./btn-common.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "extends": "ButtonBase",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 14
                    }
                }
            },
            "templateData": "<button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>\n"
        },
        {
            "name": "BtnSourceComponent",
            "id": "component-BtnSourceComponent-c069c20ccc3dceab5603b8bc7dd40e82",
            "file": "src/app/shared/atoms/btn-source/btn-source.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-btn-source",
            "styleUrls": [
                "./btn-source.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./btn-source.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 759,
                            "end": 773,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 760,
                                "end": 768,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 17,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 11,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\" | \"huge\"",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "toggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ButtonBase } from '../btn-base';\n\n@Component({\n  selector: 'app-btn-source',\n  templateUrl: './btn-source.component.html',\n  styleUrls: ['./btn-source.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BtnSourceComponent extends ButtonBase {\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-source {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  border-radius: 18px;\r\n  height: 32px;\r\n  color: var(--g-colorGray300);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: none;\r\n  padding: 0px 13px;\r\n\r\n  ::ng-deep .mat-button-wrapper {\r\n    padding: 0px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .mat-icon {\r\n      transform: rotate(135deg);\r\n      height: 20px !important;\r\n      width: 20px !important;\r\n      margin-right: 7px;\r\n    }\r\n    .material-icons-outlined {\r\n      font-size: 20px;\r\n      font-weight: 600;\r\n    }\r\n    .content {\r\n      font-size: var(--g-text-font-size-2);\r\n      text-align: left;\r\n      -webkit-line-clamp: 1;\r\n      font-weight: 700;\r\n      word-wrap: break-word;\r\n      -webkit-box-orient: vertical;\r\n      display: -webkit-box;\r\n      max-width: 100%;\r\n      overflow: hidden;\r\n      word-break: break-word;\r\n    }\r\n  }\r\n}\r\n\r\n.btn-source:hover {\r\n  background-color: rgba(255, 255, 255, 1);\r\n}\r\n\r\n.btn-source:active {\r\n  box-shadow: none !important;\r\n//   transform: scale(0.93, 0.93);\r\n}\r\n",
                    "styleUrl": "./btn-source.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "extends": "ButtonBase",
            "templateData": "<button mat-flat-button class=\"btn-source\">\n    <mat-icon class=\"material-icons-outlined\">arrow_back</mat-icon>\n    <span class=\"content\">{{label}}</span>\n</button>\n"
        },
        {
            "name": "ButtonBase",
            "id": "component-ButtonBase-6f7b98c15fc3f8e3f7d6bf80554655e1",
            "file": "src/app/shared/atoms/btn-base.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 759,
                            "end": 773,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 760,
                                "end": 768,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "mode",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\" | \"huge\""
                },
                {
                    "name": "toggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport abstract class ButtonBase {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  public primary = false;\r\n\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  public mode?: string = 'default';\r\n\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  public toggle = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  public backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  public size: 'small' | 'medium' | 'large' | 'huge' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  public label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  public onClick = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "DialogSearchResultComponent",
            "id": "component-DialogSearchResultComponent-ce9b915add0dd88c0c67d31625936c84",
            "file": "src/app/shared/molecules/dialog-search-result/dialog-search-result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dialog-search-result",
            "styleUrls": [
                "./dialog-search-result.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dialog-search-result.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog-search-result',\n  templateUrl: './dialog-search-result.component.html',\n  styleUrls: ['./dialog-search-result.component.scss']\n})\nexport class DialogSearchResultComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dialog-search-result.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>dialog-search-result works!</p>\n"
        },
        {
            "name": "DialogSelectTableComponent",
            "id": "component-DialogSelectTableComponent-babb1f42270810715d58cefe89dbb0d8",
            "file": "src/app/shared/molecules/dialog-select-table/dialog-select-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dialog-select-table",
            "styleUrls": [
                "./dialog-select-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dialog-select-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog-select-table',\n  templateUrl: './dialog-select-table.component.html',\n  styleUrls: ['./dialog-select-table.component.scss']\n})\nexport class DialogSelectTableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dialog-select-table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>dialog-select-table works!</p>\n"
        },
        {
            "name": "DialogSettingsComponent",
            "id": "component-DialogSettingsComponent-ecf30f3f0922b9c514aa7660b0846578",
            "file": "src/app/shared/molecules/dialog-settings/dialog-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dialog-settings",
            "styleUrls": [
                "./dialog-settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dialog-settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog-settings',\n  templateUrl: './dialog-settings.component.html',\n  styleUrls: ['./dialog-settings.component.scss']\n})\nexport class DialogSettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dialog-settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>dialog-settings works!</p>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-e41aded7dce8dcc9f3904c316e7fb138-1",
            "file": "src/app/shared/molecules/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<p>header works!</p>\n"
        },
        {
            "name": "ImgAvatarComponent",
            "id": "component-ImgAvatarComponent-1e462cd6a2224944862e21e496643a58",
            "file": "src/app/shared/atoms/img-avatar/img-avatar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-img-avatar",
            "styleUrls": [
                "./img-avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./img-avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "imgSource",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 759,
                            "end": 773,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 760,
                                "end": 768,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 17,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 11,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\" | \"huge\"",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "toggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input\n} from '@angular/core';\nimport { ButtonBase } from '../btn-base';\n\n@Component({\n  selector: 'app-img-avatar',\n  templateUrl: './img-avatar.component.html',\n  styleUrls: ['./img-avatar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImgAvatarComponent extends ButtonBase {\n  @Input()\n  imgSource: string = '';\n\n  public get classes(): string[] {\n    return ['img-avatar', `img-avatar--${this.size}`];\n  }\n\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".img-avatar {\r\n  border-radius: 3rem;\r\n  overflow: hidden;\r\n  display: block;\r\n}\r\n\r\n.img-avatar--small {\r\n  width: 48px;\r\n  height: 48px;\r\n  padding: 12px;\r\n  img {\r\n    display: flex;\r\n    border-radius: 3rem;\r\n  }\r\n  svg {\r\n    display: flex;\r\n    fill: var(--g-colorRed100);\r\n  }\r\n}\r\n\r\n.img-avatar--small:hover {\r\n  background-color: var(--g-colorGray100);\r\n}\r\n.img-avatar--small:active {\r\n  background-color: var(--g-colorGray150) !important;\r\n}\r\n.img-avatar--medium {\r\n  width: 32px;\r\n  height: 32px;\r\n}\r\n\r\n.img-avatar--large {\r\n  width: 48px;\r\n  height: 48px;\r\n}\r\n\r\n.img-avatar--huge {\r\n  width: 120px;\r\n  height: 120px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 4rem;\r\n  }\r\n}\r\n\r\n.img-avatar--huge {\r\n}\r\n",
                    "styleUrl": "./img-avatar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "extends": "ButtonBase",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 18
                    }
                }
            },
            "templateData": "<a [ngClass]=\"classes\">\n  <svg *ngIf=\"primary; else image\"\n    class=\"gUZ lZJ U9O kVc\"\n    height=\"24\"\n    width=\"24\"\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    aria-label=\"\"\n    role=\"img\"\n  >\n    <path\n      d=\"M0 12c0 5.123 3.211 9.497 7.73 11.218-.11-.937-.227-2.482.025-3.566.217-.932 1.401-5.938 1.401-5.938s-.357-.715-.357-1.774c0-1.66.962-2.9 2.161-2.9 1.02 0 1.512.765 1.512 1.682 0 1.025-.653 2.557-.99 3.978-.281 1.189.597 2.159 1.769 2.159 2.123 0 3.756-2.239 3.756-5.471 0-2.861-2.056-4.86-4.991-4.86-3.398 0-5.393 2.549-5.393 5.184 0 1.027.395 2.127.889 2.726a.36.36 0 0 1 .083.343c-.091.378-.293 1.189-.332 1.355-.053.218-.173.265-.4.159-1.492-.694-2.424-2.875-2.424-4.627 0-3.769 2.737-7.229 7.892-7.229 4.144 0 7.365 2.953 7.365 6.899 0 4.117-2.595 7.431-6.199 7.431-1.211 0-2.348-.63-2.738-1.373 0 0-.599 2.282-.744 2.84-.282 1.084-1.064 2.456-1.549 3.235C9.584 23.815 10.77 24 12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12\"\n    ></path>\n  </svg>\n  <ng-template #image>\n    <img src=\"{{ imgSource }}\" />\n  </ng-template>\n</a>\n"
        },
        {
            "name": "LbPinNameComponent",
            "id": "component-LbPinNameComponent-e8498e2fdf8d671bffb36a544a305799",
            "file": "src/app/shared/atoms/lb-pin-name/lb-pin-name.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lb-pin-name",
            "styleUrls": [
                "./lb-pin-name.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lb-pin-name.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "rowDisplay",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 759,
                            "end": 773,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 760,
                                "end": 768,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 17,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 11,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\" | \"huge\"",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "toggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { ButtonBase } from '../btn-base';\n\n@Component({\n  selector: 'app-lb-pin-name',\n  templateUrl: './lb-pin-name.component.html',\n  styleUrls: ['./lb-pin-name.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LbPinNameComponent extends ButtonBase {\n  @Input()\n  rowDisplay: number = 1;\n  constructor() {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sb-pin-name {\r\n  padding: 8px 6px 16px;\r\n  height: 48px;\r\n  flex: 1 1 auto;\r\n  min-height: 0;\r\n  min-width: 0;\r\n\r\n  span {\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: var(--g-text-font-size-2);\r\n    -webkit-box-orient: vertical;\r\n    display: -webkit-box;\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n    word-break: break-word;\r\n    word-wrap: break-word;\r\n    color: var(--g-colorGray300);\r\n  }\r\n}\r\n",
                    "styleUrl": "./lb-pin-name.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "extends": "ButtonBase",
            "templateData": "<div class=\"sb-pin-name\">\n  <span [style]=\"{'-webkit-line-clamp': rowDisplay}\">{{ label }}</span>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PinItemComponent",
            "id": "component-PinItemComponent-0cb96d0b7808b60ee4f85613ad7a8f83",
            "file": "src/app/shared/molecules/pin-item/pin-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pin-item",
            "styleUrls": [
                "./pin-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pin-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pin-item',\n  templateUrl: './pin-item.component.html',\n  styleUrls: ['./pin-item.component.scss']\n})\nexport class PinItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pin-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>pin-item works!</p>\n"
        },
        {
            "name": "PinItemDetailComponent",
            "id": "component-PinItemDetailComponent-76c79cbe9c5a7a10ef46fa0c04214a4d",
            "file": "src/app/shared/molecules/pin-item-detail/pin-item-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pin-item-detail",
            "styleUrls": [
                "./pin-item-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pin-item-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pin-item-detail',\n  templateUrl: './pin-item-detail.component.html',\n  styleUrls: ['./pin-item-detail.component.scss']\n})\nexport class PinItemDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pin-item-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>pin-item-detail works!</p>\n"
        },
        {
            "name": "SbTableComponent",
            "id": "component-SbTableComponent-9c63be906cb3db9521962a66f6a1851a",
            "file": "src/app/shared/atoms/sb-table/sb-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sb-table",
            "styleUrls": [
                "./sb-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sb-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 759,
                            "end": 773,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 760,
                                "end": 768,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 17,
                    "type": "string",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 11,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\" | \"huge\"",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                },
                {
                    "name": "toggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ButtonBase"
                    }
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ButtonBase } from '../btn-base';\n\n@Component({\n  selector: 'app-sb-table',\n  templateUrl: './sb-table.component.html',\n  styleUrls: ['./sb-table.component.scss'],\n})\nexport class SbTableComponent extends ButtonBase {\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sb-pin-name {\r\n  display: flex;\r\n  .label {\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: var(--g-text-font-size-3);\r\n    -webkit-box-orient: vertical;\r\n    display: -webkit-box;\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n    word-break: break-word;\r\n    word-wrap: break-word;\r\n    color: var(--g-colorGray0);\r\n    -webkit-line-clamp: 1;\r\n  }\r\n  mat-icon {\r\n    color: var(--g-colorGray0);\r\n  }\r\n}\r\n",
                    "styleUrl": "./sb-table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "extends": "ButtonBase",
            "templateData": "<div class=\"sb-pin-name\">\n  <span class=\"label\">{{ label }}</span>\n  <div class=\"material-icons-outlined\"><mat-icon>expand_more</mat-icon></div>\n</div>\n"
        },
        {
            "name": "TxbCommonComponent",
            "id": "component-TxbCommonComponent-e032d12a010aff9460a380617fb3f9de",
            "file": "src/app/shared/atoms/txb-common/txb-common.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-txb-common",
            "styleUrls": [
                "./txb-common.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./txb-common.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-txb-common',\n  templateUrl: './txb-common.component.html',\n  styleUrls: ['./txb-common.component.scss']\n})\nexport class TxbCommonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./txb-common.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>txb-common works!</p>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-198a6173f78fa86146654a5fcc7fc561",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-3c1d721cfd0753406a1cfde101c59380",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BtnCircleIconModule",
            "id": "module-BtnCircleIconModule-4a4e6797edf4fe8b08115adfcab10645",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BtnCircleIconComponent } from './btn-circle-icon.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [BtnCircleIconComponent],\n  imports: [CommonModule, MatIconModule, MatButtonModule],\n  exports: [],\n})\nexport class BtnCircleIconModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BtnCircleIconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BtnCommonModule",
            "id": "module-BtnCommonModule-afe35a53fa37283cb29ba274491c3ea6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/atoms/btn-common/btn-common.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BtnCommonComponent } from './btn-common.component';\n\n\n\n@NgModule({\n  declarations: [\n    BtnCommonComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class BtnCommonModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BtnCommonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BtnSourceModule",
            "id": "module-BtnSourceModule-bc23f2a323b99a052ba8b44bd1534f30",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/atoms/btn-source/btn-source.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BtnSourceComponent } from './btn-source.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [BtnSourceComponent],\n  imports: [CommonModule, MatIconModule, MatButtonModule],\n})\nexport class BtnSourceModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BtnSourceComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DialogSearchResultModule",
            "id": "module-DialogSearchResultModule-35f353515f3fc56c6aca7b0f95892d53",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/molecules/dialog-search-result/dialog-search-result.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogSearchResultComponent } from './dialog-search-result.component';\n\n\n\n@NgModule({\n  declarations: [\n    DialogSearchResultComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DialogSearchResultModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DialogSearchResultComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DialogSelectTableModule",
            "id": "module-DialogSelectTableModule-f86a8708132595de58fc92d5b938e7c0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/molecules/dialog-select-table/dialog-select-table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogSelectTableComponent } from './dialog-select-table.component';\n\n\n\n@NgModule({\n  declarations: [\n    DialogSelectTableComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DialogSelectTableModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DialogSelectTableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DialogSettingsModule",
            "id": "module-DialogSettingsModule-cab8326245d2a6e0d62908b8b8532be6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/molecules/dialog-settings/dialog-settings.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogSettingsComponent } from './dialog-settings.component';\n\n\n\n@NgModule({\n  declarations: [\n    DialogSettingsComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DialogSettingsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DialogSettingsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeaderModule",
            "id": "module-HeaderModule-e20290c40e668ba9ac028f72176a9f3d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/molecules/header/header.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header.component';\n\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class HeaderModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ImgAvatarModule",
            "id": "module-ImgAvatarModule-cec7c5ec30713aa045e365eccf8764bf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/atoms/img-avatar/img-avatar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImgAvatarComponent } from './img-avatar.component';\n\n\n\n@NgModule({\n  declarations: [\n    ImgAvatarComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ImgAvatarModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ImgAvatarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LbPinNameModule",
            "id": "module-LbPinNameModule-21dbe345d31330793ee8128e2c5ebf2d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/atoms/lb-pin-name/lb-pin-name.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LbPinNameComponent } from './lb-pin-name.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ImgAvatarModule } from '../img-avatar/img-avatar.module';\n\n@NgModule({\n  declarations: [LbPinNameComponent],\n  imports: [CommonModule, MatIconModule, ImgAvatarModule],\n})\nexport class LbPinNameModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LbPinNameComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ImgAvatarModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PinItemDetailModule",
            "id": "module-PinItemDetailModule-b7fa71d04a27e139741a42a0f22009d9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/molecules/pin-item-detail/pin-item-detail.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PinItemDetailComponent } from './pin-item-detail.component';\n\n\n\n@NgModule({\n  declarations: [\n    PinItemDetailComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PinItemDetailModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PinItemDetailComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PinItemModule",
            "id": "module-PinItemModule-5b7d46a27046f080678446757445d9fe",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/molecules/pin-item/pin-item.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PinItemComponent } from './pin-item.component';\n\n\n\n@NgModule({\n  declarations: [\n    PinItemComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PinItemModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PinItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SbTableModule",
            "id": "module-SbTableModule-af4cec75afd53a680be3db0d3f15e340",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/atoms/sb-table/sb-table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SbTableComponent } from './sb-table.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [SbTableComponent],\n  imports: [CommonModule, MatIconModule],\n})\nexport class SbTableModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SbTableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TxbCommonModule",
            "id": "module-TxbCommonModule-0996673a465260e18d04e46f4ed881df",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/atoms/txb-common/txb-common.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TxbCommonComponent } from './txb-common.component';\n\n\n\n@NgModule({\n  declarations: [\n    TxbCommonComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class TxbCommonModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TxbCommonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Home",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HomeInDetail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LbPinName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/lb-pin-name/lb-pin-name.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MessageHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MoreHoriz",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MoreHorizDetail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NotificationHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PinAvatar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PinDetail_UserAvatar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PinterestIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Save",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SbTableLong",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/sb-table/sb-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SbTableShort",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/sb-table/sb-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Share",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Share",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-source/btn-source.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ShareDetail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BtnCircleIconComponent>",
                "defaultValue": "(\n  args: BtnCircleIconComponent\n) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-source/btn-source.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BtnSourceComponent>",
                "defaultValue": "(args: BtnSourceComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BtnCommonComponent>",
                "defaultValue": "(args: BtnCommonComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/lb-pin-name/lb-pin-name.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LbPinNameComponent>",
                "defaultValue": "(args: LbPinNameComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ImgAvatarComponent>",
                "defaultValue": "(args: ImgAvatarComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/sb-table/sb-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SbTableComponent>",
                "defaultValue": "(args: SbTableComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "UserAvatar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "UserDetailAvatar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ZoomPinDetail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/shared/atoms/btn-common/btn-common.stories.ts": [
                {
                    "name": "Home",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HomeInDetail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Save",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BtnCommonComponent>",
                    "defaultValue": "(args: BtnCommonComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/atoms/lb-pin-name/lb-pin-name.stories.ts": [
                {
                    "name": "LbPinName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/lb-pin-name/lb-pin-name.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/lb-pin-name/lb-pin-name.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LbPinNameComponent>",
                    "defaultValue": "(args: LbPinNameComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts": [
                {
                    "name": "MessageHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MoreHoriz",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MoreHorizDetail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NotificationHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Share",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ShareDetail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BtnCircleIconComponent>",
                    "defaultValue": "(\n  args: BtnCircleIconComponent\n) => ({\n  props: args,\n})"
                },
                {
                    "name": "ZoomPinDetail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/shared/atoms/img-avatar/img-avatar.stories.ts": [
                {
                    "name": "PinAvatar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PinDetail_UserAvatar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PinterestIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ImgAvatarComponent>",
                    "defaultValue": "(args: ImgAvatarComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "UserAvatar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "UserDetailAvatar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/shared/atoms/sb-table/sb-table.stories.ts": [
                {
                    "name": "SbTableLong",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/sb-table/sb-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SbTableShort",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/sb-table/sb-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/sb-table/sb-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SbTableComponent>",
                    "defaultValue": "(args: SbTableComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/atoms/btn-source/btn-source.stories.ts": [
                {
                    "name": "Share",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-source/btn-source.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/atoms/btn-source/btn-source.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BtnSourceComponent>",
                    "defaultValue": "(args: BtnSourceComponent) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 10,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-base.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonBase",
                "coveragePercent": 87,
                "coverageCount": "7/8",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BtnCircleIconComponent",
                "coveragePercent": 77,
                "coverageCount": "7/9",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MessageHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MoreHoriz",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MoreHorizDetail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotificationHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Share",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ShareDetail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-circle-icon/btn-circle-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ZoomPinDetail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-common/btn-common.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BtnCommonComponent",
                "coveragePercent": 77,
                "coverageCount": "7/9",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Home",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HomeInDetail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Save",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-common/btn-common.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-source/btn-source.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BtnSourceComponent",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "src/app/shared/atoms/btn-source/btn-source.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Share",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/btn-source/btn-source.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/img-avatar/img-avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImgAvatarComponent",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PinAvatar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PinDetail_UserAvatar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PinterestIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserAvatar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/img-avatar/img-avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserDetailAvatar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/lb-pin-name/lb-pin-name.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LbPinNameComponent",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "src/app/shared/atoms/lb-pin-name/lb-pin-name.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LbPinName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/lb-pin-name/lb-pin-name.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/sb-table/sb-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SbTableComponent",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "src/app/shared/atoms/sb-table/sb-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SbTableLong",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/sb-table/sb-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SbTableShort",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/sb-table/sb-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/atoms/txb-common/txb-common.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TxbCommonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/molecules/dialog-search-result/dialog-search-result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogSearchResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/molecules/dialog-select-table/dialog-select-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogSelectTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/molecules/dialog-settings/dialog-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/molecules/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/molecules/pin-item-detail/pin-item-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PinItemDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/molecules/pin-item/pin-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PinItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}